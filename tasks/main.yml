---
 
  - include_vars: vars/registrycrt.yml
    when: self_signed_registry

  - name: install python 2.7
    apt: name=python2.7 state=installed

  - name: enable ssh server in firewall
    ufw: rule=allow name=OpenSSH
    
  - name: open port 2375 for daemon
    ufw: rule=allow port=2375

  - name: start reload firewall
    ufw: state=enabled

  - name: add docker repo key
    apt_key: keyserver='hkp://p80.pool.sks-keyservers.net:80' id='58118E89F3A912897C070ADBF76221572C52609D'

  - name: add docker-engine apt repository
    apt_repository: repo='deb https://apt.dockerproject.org/repo ubuntu-trusty main' state=present

  - name: install docker engine {{ docker_engine_version }} 
    apt: name="docker-engine={{ docker_engine_version }}-0~trusty" state=installed update_cache=yes

  - stat: path=/tmp/ez_setup.py
    register: stat_result

  - name: download ez_setup.py
    get_url: url=https://bootstrap.pypa.io/ez_setup.py dest=/tmp/ez_setup.py
    when: not stat_result.stat.exists

  - name: stat easy_install file
    stat: path=/usr/local/bin/easy_install
    register: stat_result

  - name: install python-setuptools
    command: python /tmp/ez_setup.py
    when: not stat_result.stat.exists

  - name: install pip
    easy_install: name=pip state=present

  - name: install docker-py
    pip: name=docker-py state=latest

  - name: configure docker daemon configuration
    template: src=docker.j2 dest=/etc/default/docker
    notify: restart docker daemon
 
  - name: create directory for certificate
    file: state=directory path=/etc/docker/certs.d/{{ registry_dns_url }}
    when: self_signed_registry

  - name: copy registry private key
    register: copy_result
    when: self_signed_registry
    notify: restart docker daemon
    copy:
      content: '{{ ssl_certificate }}'
      dest: /etc/docker/certs.d/{{ registry_dns_url }}/ca.crt
      owner: root
      group: root
      mode: 0644

  - meta: flush_handlers
